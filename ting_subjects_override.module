<?php

/**
 * @file
 * Allow to override ting_details_subjects field.
 */

include "lib/SO.php";

use SO\SubjectsOverrides as SubjectsOverrides;

/**
 * Implements hook_entity_prepare_view().
 *
 * @throws \ReflectionException
 */
function ting_subjects_override_entity_prepare_view($entities, $type, $langcode) {
  if ($type == 'ting_object') {
    $entity = array_shift($entities);
    $call_class = new SubjectsOverrides($entity);

    // Instantiate the reflection object.
    $reflector = new ReflectionClass($call_class);

    // Now get all the properties from class A in to $properties array.
    $properties = $reflector->getProperties();

    // Now go through the $properties array and populate each property.
    foreach ($properties as $property) {
      // Invoking the method to print what was populated.
      if ($property->getName() == 'subjects') {
        $call_class->{"getSubjects"}();
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ting_subjects_override_preprocess_field(&$variables) {
  $field_name = $variables["element"]["#field_name"];

  if ($field_name == 'ting_subjects') {
    $object = $variables['element']['#object'];

    if (!empty($object->subjects)) {
      $search_string = variable_get('ting_search_register_subject', 'phrase.subject="@subject"');
      $subject_links = array_map(function ($subject) use ($search_string) {
        $replacement = array('@subject' => $subject);
        $options = array(
          'attributes' => array('class' => array('subject')),
        );
        return ting_field_search_link($subject, $search_string, $replacement, $options);
      }, $object->subjects);

      $variables['items'][0]['#markup'] = implode(' ', $subject_links);
    }
  }
}
